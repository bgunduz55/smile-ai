{
  "name": "smile-ai",
  "displayName": "Smile AI",
  "description": "A local AI developer assistant for VS Code",
  "version": "0.0.1",
  "publisher": "bgund",
  "repository": {
    "type": "git",
    "url": "https://github.com/bgund/smile-ai"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.36.3",
    "axios": "^1.7.9",
    "openai": "^4.83.0",
    "sql.js": "^1.12.0"
  },
  "devDependencies": {
    "@types/minimatch": "^5.1.2",
    "@types/node": "^18.0.0",
    "@types/sql.js": "^1.4.9",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vscode/codicons": "^0.0.36",
    "eslint": "^8.56.0",
    "ts-loader": "^9.5.0",
    "typescript": "^5.3.0",
    "webpack": "^5.97.0",
    "webpack-cli": "^5.1.0"
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "smile-ai",
          "title": "Smile AI",
          "icon": "$(hubot)"
        }
      ]
    },
    "views": {
      "smile-ai": [
        {
          "type": "webview",
          "id": "smile-ai.mainView",
          "name": "Smile AI",
          "visibility": "visible"
        }
      ]
    },
    "commands": [
      {
        "command": "smile-ai.switchToChat",
        "title": "Chat",
        "category": "Smile AI",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "smile-ai.switchToComposer",
        "title": "Composer",
        "category": "Smile AI",
        "icon": "$(edit)"
      },
      {
        "command": "smile-ai.switchToSuggestions",
        "title": "Öneriler",
        "category": "Smile AI",
        "icon": "$(lightbulb)"
      },
      {
        "command": "smile-ai.switchToRules",
        "title": "Kurallar",
        "category": "Smile AI",
        "icon": "$(book)"
      },
      {
        "command": "smile-ai.switchToSettings",
        "title": "Ayarlar",
        "category": "Smile AI",
        "icon": "$(gear)"
      },
      {
        "command": "smile-ai.codeCompletion",
        "title": "Kod Tamamlama",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.codeAnalysis",
        "title": "Kod Analizi",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.generateCode",
        "title": "Kod Üret",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.generateDocs",
        "title": "Dokümantasyon Üret",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.generateTests",
        "title": "Test Üret",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.refactorCode",
        "title": "Kodu Yeniden Düzenle",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.fixBug",
        "title": "Hata Düzelt",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.createRule",
        "title": "Yeni Kural Seti Oluştur",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.editRule",
        "title": "Kural Setini Düzenle",
        "category": "Smile AI"
      },
      {
        "command": "smile-ai.viewRules",
        "title": "Kuralları Görüntüle",
        "category": "Smile AI"
      }
    ],
    "keybindings": [
      {
        "command": "smile-ai.openChat",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a"
      },
      {
        "command": "smile-ai.startComposer",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c"
      },
      {
        "command": "smile-ai.switchView",
        "key": "ctrl+tab",
        "mac": "cmd+tab",
        "when": "activeViewContainer == smile-ai-sidebar"
      }
    ],
    "configuration": {
      "title": "Smile AI",
      "properties": {
        "smile-ai.modelProvider": {
          "type": "string",
          "enum": [
            "ollama",
            "llamacpp",
            "openai",
            "anthropic",
            "local"
          ],
          "default": "ollama",
          "description": "AI model sağlayıcısı"
        },
        "smile-ai.modelSettings": {
          "type": "object",
          "properties": {
            "ollama": {
              "type": "object",
              "properties": {
                "modelPath": {
                  "type": "string",
                  "description": "Ollama model dosyasının yolu"
                },
                "apiEndpoint": {
                  "type": "string",
                  "default": "http://localhost:11434",
                  "description": "Ollama API endpoint"
                }
              }
            },
            "llamacpp": {
              "type": "object",
              "properties": {
                "modelPath": {
                  "type": "string",
                  "description": "LlamaCpp model dosyasının yolu"
                }
              }
            },
            "openai": {
              "type": "object",
              "properties": {
                "apiKey": {
                  "type": "string",
                  "description": "OpenAI API anahtarı"
                },
                "model": {
                  "type": "string",
                  "default": "gpt-4",
                  "description": "Kullanılacak OpenAI modeli"
                }
              }
            },
            "anthropic": {
              "type": "object",
              "properties": {
                "apiKey": {
                  "type": "string",
                  "description": "Anthropic API anahtarı"
                },
                "model": {
                  "type": "string",
                  "default": "claude-3-opus-20240229",
                  "description": "Kullanılacak Anthropic modeli"
                }
              }
            }
          }
        },
        "smile-ai.modelParameters": {
          "type": "object",
          "properties": {
            "temperature": {
              "type": "number",
              "default": 0.7,
              "description": "Model sıcaklık değeri (0-1 arası)"
            },
            "maxTokens": {
              "type": "number",
              "default": 2048,
              "description": "Maksimum token sayısı"
            },
            "contextSize": {
              "type": "number",
              "default": 4096,
              "description": "Model bağlam boyutu"
            }
          }
        },
        "smile-ai.contextSize": {
          "type": "number",
          "default": 4096,
          "description": "Model bağlam boyutu"
        },
        "smile-ai.temperature": {
          "type": "number",
          "default": 0.7,
          "description": "Model sıcaklık değeri (0-1 arası)"
        },
        "smile-ai.maxTokens": {
          "type": "number",
          "default": 2048,
          "description": "Maksimum token sayısı"
        },
        "smile-ai.gpu.enabled": {
          "type": "boolean",
          "default": true,
          "description": "GPU kullanımını etkinleştir"
        },
        "smile-ai.gpu.layers": {
          "type": "number",
          "default": 32,
          "description": "GPU'da çalıştırılacak katman sayısı"
        },
        "smile-ai.gpu.device": {
          "type": "string",
          "default": "cuda",
          "enum": [
            "cuda",
            "metal",
            "directml"
          ],
          "description": "Kullanılacak GPU cihazı"
        },
        "smile-ai.performance.batchSize": {
          "type": "number",
          "default": 512,
          "description": "Model batch size değeri"
        },
        "smile-ai.performance.threads": {
          "type": "number",
          "default": 4,
          "description": "Kullanılacak CPU thread sayısı"
        },
        "smile-ai.performance.useMlock": {
          "type": "boolean",
          "default": true,
          "description": "Model belleğini kilitleyerek performansı artır"
        },
        "smile-ai.performance.useMemorymap": {
          "type": "boolean",
          "default": true,
          "description": "Memory mapping kullanarak bellek kullanımını optimize et"
        },
        "smile-ai.caching.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Model çıktılarını önbelleklemeyi etkinleştir"
        },
        "smile-ai.caching.maxSize": {
          "type": "number",
          "default": 1073741824,
          "description": "Maksimum önbellek boyutu (byte)"
        },
        "smile-ai.caching.ttl": {
          "type": "number",
          "default": 3600000,
          "description": "Önbellek girişlerinin yaşam süresi (ms)"
        },
        "smile-ai.ollama": {
          "type": "object",
          "title": "Ollama Yapılandırması",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "http://localhost:11434",
              "description": "Ollama API endpoint adresi"
            },
            "defaultModel": {
              "type": "string",
              "default": "llama2",
              "description": "Varsayılan Ollama modeli"
            },
            "temperature": {
              "type": "number",
              "default": 0.7,
              "minimum": 0,
              "maximum": 1,
              "description": "Model sıcaklık değeri"
            },
            "topP": {
              "type": "number",
              "default": 0.9,
              "minimum": 0,
              "maximum": 1,
              "description": "Top-p örnekleme değeri"
            },
            "maxTokens": {
              "type": "number",
              "default": 4096,
              "description": "Maksimum token sayısı"
            },
            "contextSize": {
              "type": "number",
              "default": 4096,
              "description": "Bağlam penceresi boyutu"
            },
            "gpuLayers": {
              "type": "number",
              "default": 0,
              "description": "GPU'da çalıştırılacak katman sayısı"
            },
            "threads": {
              "type": "number",
              "default": 4,
              "description": "Kullanılacak CPU thread sayısı"
            }
          }
        },
        "smile-ai.lmstudio": {
          "type": "object",
          "title": "LM Studio Yapılandırması",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "http://localhost:1234/v1",
              "description": "LM Studio API endpoint adresi"
            },
            "defaultModel": {
              "type": "string",
              "default": "default",
              "description": "Varsayılan LM Studio modeli"
            },
            "temperature": {
              "type": "number",
              "default": 0.7,
              "minimum": 0,
              "maximum": 1,
              "description": "Model sıcaklık değeri"
            },
            "topP": {
              "type": "number",
              "default": 0.9,
              "minimum": 0,
              "maximum": 1,
              "description": "Top-p örnekleme değeri"
            },
            "maxTokens": {
              "type": "number",
              "default": 2048,
              "description": "Maksimum token sayısı"
            },
            "stopTokens": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "</s>",
                "<s>"
              ],
              "description": "Yanıt üretimini durduracak token'lar"
            },
            "systemPrompt": {
              "type": "string",
              "default": "You are a helpful AI assistant specialized in software development.",
              "description": "Sistem prompt'u"
            },
            "requestTimeout": {
              "type": "number",
              "default": 60000,
              "description": "İstek zaman aşımı süresi (ms)"
            },
            "retryAttempts": {
              "type": "number",
              "default": 3,
              "description": "Başarısız istekler için yeniden deneme sayısı"
            },
            "retryDelay": {
              "type": "number",
              "default": 1000,
              "description": "Yeniden denemeler arasındaki bekleme süresi (ms)"
            }
          }
        },
        "smile-ai.localai": {
          "type": "object",
          "title": "LocalAI Yapılandırması",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "http://localhost:8080/v1",
              "description": "LocalAI API endpoint adresi"
            },
            "defaultModel": {
              "type": "string",
              "default": "default",
              "description": "Varsayılan LocalAI modeli"
            },
            "modelsPath": {
              "type": "string",
              "description": "LocalAI modellerinin bulunduğu dizin"
            },
            "gpuEnabled": {
              "type": "boolean",
              "default": false,
              "description": "GPU desteğini etkinleştir"
            },
            "debug": {
              "type": "boolean",
              "default": false,
              "description": "Debug modunu etkinleştir"
            },
            "temperature": {
              "type": "number",
              "default": 0.7,
              "minimum": 0,
              "maximum": 1,
              "description": "Model sıcaklık değeri"
            },
            "topP": {
              "type": "number",
              "default": 0.9,
              "minimum": 0,
              "maximum": 1,
              "description": "Top-p örnekleme değeri"
            },
            "maxTokens": {
              "type": "number",
              "default": 2048,
              "description": "Maksimum token sayısı"
            },
            "stopTokens": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "</s>",
                "<s>"
              ],
              "description": "Yanıt üretimini durduracak token'lar"
            },
            "systemPrompt": {
              "type": "string",
              "default": "You are a helpful AI assistant specialized in software development.",
              "description": "Sistem prompt'u"
            },
            "docker": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "default": "localai/localai:latest",
                  "description": "Kullanılacak Docker image"
                },
                "containerName": {
                  "type": "string",
                  "default": "smile-ai-localai",
                  "description": "Container adı"
                },
                "port": {
                  "type": "number",
                  "default": 8080,
                  "description": "LocalAI servisinin çalışacağı port"
                },
                "autoRestart": {
                  "type": "boolean",
                  "default": true,
                  "description": "Container'ı otomatik yeniden başlat"
                },
                "resources": {
                  "type": "object",
                  "properties": {
                    "cpuLimit": {
                      "type": "string",
                      "default": "2",
                      "description": "CPU limiti"
                    },
                    "memoryLimit": {
                      "type": "string",
                      "default": "4g",
                      "description": "Bellek limiti"
                    }
                  }
                }
              }
            }
          }
        },
        "smile-ai.deepseek": {
          "type": "object",
          "title": "Deepseek Yapılandırması",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "https://api.deepseek.com/v1",
              "description": "Deepseek API endpoint adresi"
            },
            "apiKey": {
              "type": "string",
              "description": "Deepseek API anahtarı"
            },
            "model": {
              "type": "string",
              "default": "deepseek-coder-33b-instruct",
              "enum": [
                "deepseek-coder-33b-instruct",
                "deepseek-coder-6.7b-instruct",
                "deepseek-coder-1.3b-instruct"
              ],
              "description": "Kullanılacak model"
            },
            "temperature": {
              "type": "number",
              "default": 0.7,
              "minimum": 0,
              "maximum": 1,
              "description": "Model sıcaklık değeri"
            },
            "topP": {
              "type": "number",
              "default": 0.9,
              "minimum": 0,
              "maximum": 1,
              "description": "Top-p örnekleme değeri"
            },
            "maxTokens": {
              "type": "number",
              "default": 2048,
              "description": "Maksimum token sayısı"
            },
            "stopTokens": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "</s>",
                "<s>"
              ],
              "description": "Yanıt üretimini durduracak token'lar"
            },
            "systemPrompt": {
              "type": "string",
              "default": "You are a helpful AI assistant specialized in software development.",
              "description": "Sistem prompt'u"
            },
            "frequencyPenalty": {
              "type": "number",
              "default": 0,
              "minimum": -2,
              "maximum": 2,
              "description": "Kelime tekrarı cezası"
            },
            "presencePenalty": {
              "type": "number",
              "default": 0,
              "minimum": -2,
              "maximum": 2,
              "description": "Konu tekrarı cezası"
            }
          }
        },
        "smile-ai.qwen": {
          "type": "object",
          "title": "Qwen Yapılandırması",
          "properties": {
            "endpoint": {
              "type": "string",
              "default": "https://dashscope.aliyuncs.com/api/v1",
              "description": "Qwen API endpoint adresi"
            },
            "apiKey": {
              "type": "string",
              "description": "Qwen API anahtarı"
            },
            "model": {
              "type": "string",
              "default": "qwen2.5-turbo",
              "enum": [
                "qwen2.5-turbo",
                "qwen2.5-pro",
                "qwen1.5-72b",
                "qwen1.5-14b"
              ],
              "description": "Kullanılacak model"
            },
            "temperature": {
              "type": "number",
              "default": 0.7,
              "minimum": 0,
              "maximum": 1,
              "description": "Model sıcaklık değeri"
            },
            "topP": {
              "type": "number",
              "default": 0.9,
              "minimum": 0,
              "maximum": 1,
              "description": "Top-p örnekleme değeri"
            },
            "maxTokens": {
              "type": "number",
              "default": 2048,
              "description": "Maksimum token sayısı"
            },
            "stopTokens": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "</s>",
                "<s>"
              ],
              "description": "Yanıt üretimini durduracak token'lar"
            },
            "systemPrompt": {
              "type": "string",
              "default": "You are a helpful AI assistant specialized in software development.",
              "description": "Sistem prompt'u"
            },
            "enableSearch": {
              "type": "boolean",
              "default": true,
              "description": "Web araması özelliğini etkinleştir"
            },
            "seed": {
              "type": "number",
              "description": "Rastgele sayı üreteci için başlangıç değeri"
            },
            "repetitionPenalty": {
              "type": "number",
              "default": 1.1,
              "minimum": 1,
              "maximum": 2,
              "description": "Tekrar cezası katsayısı"
            },
            "topK": {
              "type": "number",
              "default": 50,
              "minimum": 1,
              "description": "Top-k örnekleme değeri"
            }
          }
        },
        "smile-ai.rules": {
          "type": "object",
          "title": "Smile Rules",
          "properties": {
            "rulesPath": {
              "type": "string",
              "default": ".smile",
              "description": "Smile kurallarının bulunduğu klasör yolu"
            },
            "enabledRules": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "code-style",
                "naming",
                "testing",
                "documentation",
                "git",
                "architecture",
                "security",
                "performance"
              ],
              "description": "Aktif kural setleri"
            },
            "customRules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Kural seti adı"
                  },
                  "path": {
                    "type": "string",
                    "description": "Kural dosyasının yolu"
                  },
                  "description": {
                    "type": "string",
                    "description": "Kural seti açıklaması"
                  }
                }
              },
              "default": [],
              "description": "Özel kural setleri"
            },
            "overrides": {
              "type": "object",
              "default": {},
              "description": "Kural geçersiz kılmaları"
            }
          }
        },
        "smile-ai.rules.codeStyle": {
          "type": "object",
          "title": "Kod Stili",
          "properties": {
            "indentSize": {
              "type": "number",
              "default": 4,
              "description": "Girinti boyutu"
            },
            "useTabs": {
              "type": "boolean",
              "default": false,
              "description": "Tab kullanımı"
            },
            "maxLineLength": {
              "type": "number",
              "default": 80,
              "description": "Maksimum satır uzunluğu"
            },
            "quoteStyle": {
              "type": "string",
              "enum": [
                "single",
                "double"
              ],
              "default": "single",
              "description": "Tırnak işareti stili"
            },
            "semicolons": {
              "type": "boolean",
              "default": true,
              "description": "Noktalı virgül kullanımı"
            }
          }
        },
        "smile-ai.rules.naming": {
          "type": "object",
          "title": "İsimlendirme",
          "properties": {
            "variables": {
              "type": "string",
              "enum": [
                "camelCase",
                "snake_case",
                "PascalCase"
              ],
              "default": "camelCase",
              "description": "Değişken isimlendirme stili"
            },
            "functions": {
              "type": "string",
              "enum": [
                "camelCase",
                "snake_case",
                "PascalCase"
              ],
              "default": "camelCase",
              "description": "Fonksiyon isimlendirme stili"
            },
            "classes": {
              "type": "string",
              "enum": [
                "camelCase",
                "snake_case",
                "PascalCase"
              ],
              "default": "PascalCase",
              "description": "Sınıf isimlendirme stili"
            },
            "interfaces": {
              "type": "string",
              "enum": [
                "camelCase",
                "snake_case",
                "PascalCase"
              ],
              "default": "PascalCase",
              "description": "Interface isimlendirme stili"
            },
            "constants": {
              "type": "string",
              "enum": [
                "camelCase",
                "snake_case",
                "PascalCase",
                "UPPER_CASE"
              ],
              "default": "UPPER_CASE",
              "description": "Sabit isimlendirme stili"
            }
          }
        },
        "smile-ai.rules.testing": {
          "type": "object",
          "title": "Test Kuralları",
          "properties": {
            "required": {
              "type": "boolean",
              "default": true,
              "description": "Test zorunluluğu"
            },
            "coverage": {
              "type": "object",
              "properties": {
                "statements": {
                  "type": "number",
                  "default": 80,
                  "description": "Statement coverage yüzdesi"
                },
                "branches": {
                  "type": "number",
                  "default": 70,
                  "description": "Branch coverage yüzdesi"
                },
                "functions": {
                  "type": "number",
                  "default": 80,
                  "description": "Function coverage yüzdesi"
                },
                "lines": {
                  "type": "number",
                  "default": 80,
                  "description": "Line coverage yüzdesi"
                }
              }
            }
          }
        },
        "smile-ai.rules.documentation": {
          "type": "object",
          "title": "Dokümantasyon",
          "properties": {
            "required": {
              "type": "boolean",
              "default": true,
              "description": "Dokümantasyon zorunluluğu"
            },
            "style": {
              "type": "string",
              "enum": [
                "JSDoc",
                "TSDoc",
                "docstring",
                "custom"
              ],
              "default": "JSDoc",
              "description": "Dokümantasyon stili"
            },
            "requireParams": {
              "type": "boolean",
              "default": true,
              "description": "Parametre dokümantasyonu zorunluluğu"
            },
            "requireReturns": {
              "type": "boolean",
              "default": true,
              "description": "Dönüş değeri dokümantasyonu zorunluluğu"
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "pnpm": {
    "ignoredBuiltDependencies": [
      "sqlite3"
    ]
  }
}
